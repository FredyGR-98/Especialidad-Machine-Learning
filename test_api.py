"""
===========================================================
üß™ test_api.py ‚Äî Pruebas autom√°ticas para la API
===========================================================

Este script realiza pruebas autom√°ticas sobre la API de Flask:
1. Valida que el endpoint ra√≠z `/` responda correctamente.
2. Env√≠a un ejemplo de caso Maligno y muestra la predicci√≥n.
3. Env√≠a un ejemplo de caso Benigno y muestra la predicci√≥n.
4. Env√≠a datos inv√°lidos para verificar manejo de errores.

‚úÖ Adem√°s, imprime los datos de entrada usados en cada prueba,
para que el usuario pueda copiarlos y probarlos manualmente
con `curl` o Postman si lo desea.
"""

import requests

BASE_URL = "http://127.0.0.1:5000"

# Ejemplos de prueba (extra√≠dos del dataset original)
CASE_MALIGNO = {
    "features": [
        17.99, 10.38, 122.8, 1001, 0.1184, 0.2776, 0.3001, 0.1471, 0.2419, 0.07871,
        1.095, 0.9053, 8.589, 153.4, 0.006399, 0.04904, 0.05373, 0.01587, 0.03003,
        0.006193, 25.38, 17.33, 184.6, 2019, 0.1622, 0.6656, 0.7119, 0.2654, 0.4601,
        0.1189
    ]
}

CASE_BENIGNO = {
    "features": [
        12.32, 12.39, 78.85, 464.1, 0.1028, 0.06981, 0.03987, 0.037, 0.1959, 0.05955,
        0.3068, 0.3196, 2.217, 24.54, 0.0089, 0.0131, 0.018, 0.0098, 0.0184,
        0.0035, 15.11, 19.26, 99.7, 674.7, 0.1316, 0.1529, 0.1882, 0.0844, 0.2252,
        0.0731
    ]
}

print("üöÄ Ejecutando pruebas autom√°ticas de la API...\n")

# 1Ô∏è‚É£ Test GET /
try:
    r = requests.get(f"{BASE_URL}/")
    if r.status_code == 200:
        print("‚úÖ GET / ‚Üí funciona correctamente")
    else:
        print(f"‚ùå GET / ‚Üí error {r.status_code}")
except Exception as e:
    print("‚ùå GET / ‚Üí no se pudo conectar:", e)

# 2Ô∏è‚É£ Test POST /predict con caso Maligno
print("\nüî¨ Probando caso MALIGNO con los siguientes datos:")
print(CASE_MALIGNO, "\n")
try:
    r = requests.post(f"{BASE_URL}/predict", json=CASE_MALIGNO)
    print("‚úÖ POST /predict (Maligno) ‚Üí respuesta:", r.json())
except Exception as e:
    print("‚ùå POST /predict (Maligno) ‚Üí error:", e)

# 3Ô∏è‚É£ Test POST /predict con caso Benigno
print("\nüî¨ Probando caso BENIGNO con los siguientes datos:")
print(CASE_BENIGNO, "\n")
try:
    r = requests.post(f"{BASE_URL}/predict", json=CASE_BENIGNO)
    print("‚úÖ POST /predict (Benigno) ‚Üí respuesta:", r.json())
except Exception as e:
    print("‚ùå POST /predict (Benigno) ‚Üí error:", e)

# 4Ô∏è‚É£ Test POST /predict con datos inv√°lidos
print("\nüî¨ Probando caso INV√ÅLIDO:")
try:
    r = requests.post(f"{BASE_URL}/predict", json={"foo": "bar"})
    if r.status_code == 400:
        print("‚úÖ POST /predict (datos inv√°lidos) ‚Üí retorna error 400 correctamente")
    else:
        print(f"‚ùå POST /predict (datos inv√°lidos) ‚Üí error {r.status_code}")
except Exception as e:
    print("‚ùå POST /predict (datos inv√°lidos) ‚Üí error:", e)